version: '3.1'
services:
  web:
    build: .
    command: bash -c "python manage.py migrate &&
                      python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/code
     ports:
      - "8000:8000"
     depends_on:
      - db
     links:
      -db:db
  db:
    image: 'postgres:alpine'
    environment:
      - POSTGRES_USER=rag
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=rag
      - 'POSTGRES_HOST_AUTH_METHOD=trust'
    ports:
      - '5432'
    volumes:
      - dbdata:/var/lib/postgresql/data:delegated

  broker:
    image: 'rabbitmq:alpine'

  result:
    image: 'redis:alpine'

  frontend:
    build:
      dockerfile: frontend/Dockerfile
      context: .
    volumes:
      - .:/app/
      - /app/node_modules
    ports:
      - '3000:3000'

  backend:
    build:
      dockerfile: backend/Dockerfile
      context: .
    ports:
      - '8000:8000'
    volumes:
      - ./:/home/user/app/
    env_file: backend/.env
    depends_on:
      - db
      - broker
      - result
      - frontend

  celery:
    build:
      dockerfile: backend/Dockerfile
      context: .
    command: python manage.py celery
    volumes:
      - ./backend/:/home/user/app/
    env_file: backend/.env
    depends_on:
      - db
      - broker
      - result

  mailhog: # service for faking a SMTP server
    image: mailhog/mailhog
    ports:
      - '1025:1025' # smtp server
      - '8025:8025' # web ui

volumes:
  dbdata:
    external:
      name: rag_dbdata
